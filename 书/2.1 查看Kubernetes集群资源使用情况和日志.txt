2.1.1 Metrics Server
我们可以借助k8s里的top功能来查看节点或者Pod的资源使用情况，这里的资源主要是CPU和内存。

但要想正常使用top功能，还需要先安装Metrics Server，它是一个用于收集并提供集群资源使用情况指标的组件。它能够从 Kubernetes API Server中获取指标数据，并将其提供给其它组件（如 Horizontal Pod Autoscaler 和 Kubernetes Dashboard）以进行资源调度和监控。


Metrics Server 收集的指标包括 CPU 使用率、内存使用率、文件系统使用情况等，这些指标对于集群的监控和自动化资源调整非常重要。

2.1.2 安装Metrics Server
下载yaml文件
wget https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/high-availability-1.21+.yaml


修改YAML文件
vi high-availability-1.21+.yaml


按如下说明进行修改：

1）将image: k8s.gcr.io/metrics-server/metrics-server:v0.6.2 修改为 image: aminglinux/metrics-server:v0.6.2 

2）在image: 这行上面增加一行: - --kubelet-insecure-tls 



如下图所示：





应用此YAML

kubectl apply -f high-availability-1.21+.yaml

2.1.3 使用top查看资源使用情况

1）kubectl  top查看Node使用CPU和内存情况

kubectl top node  #查看所有node
kubectl top node k8s01 #查看指定node

2）kubectl  top查看Pod使用CPU和内存情况



kubectl top pod #查看所有Pod
kubectl top pod php-apache-64b6b9d449-t9h4z  #查看指定Pod


2.1.4 查看日志
1）K8s相关日志
查看Linux系统里记录的日志

journalctl  -u kubelet


查看K8s各组件日志

首先查看Pod name
kubectl get po -n kube-system  # calico-kube-controllers-xxxx, calico-node-xxx, coredns-xxx, etcd-xxx, kube-apiserver-xxx, kube-controller-manager-xxx, kube-proxy-xxx, kube-scheduler-xxx, metrics-server-xxx

查看指定Pod日志
kubectl logs -n kube-system calico-kube-controllers-798cc86c47-44525
kubectl logs -n kube-system kube-scheduler-k8s01

另外，可以加上-f选项动态查看指定pod日志，类似tail -f

2）应用日志
跟查看K8s组件日志一样，将Pod名字改为想查看的Pod名字即可
kubectl logs php-apache-64b6b9d449-t9h4z


另外，也可以进入到Pod内部去查看应用日志

kubectl exec -it pod-name -n namespace-name -- bash  ##进入后，再去查看具体的日志

有时候，我们的应用也会将日志目录给映射到Node上或者共享存储里，那样查看日志就方便多了。